{"version":3,"sources":["components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.jsx","components/Statistics/Statistics.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Notification/Notification.jsx","components/Feedback/Feedback.jsx","App.js","index.js"],"names":["module","exports","Section","title","children","Statistics","good","neutral","bad","total","positivePercentage","className","s","wrapper","text","FeedbackOptions","options","onLeaveFeedback","map","option","button","type","name","onClick","shortid","generate","Notification","message","Feedback","state","countTotalFeedback","countPositiveFeedbackPercentage","percentage","Math","round","e","target","setState","prev","this","objKey","Object","keys","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,QAAU,4BAA4B,KAAO,2B,mBCA/DD,EAAOC,QAAU,CAAC,OAAS,kC,yKCcZC,EAbC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,qCACE,6BAAKD,IACJC,M,gBCmBQC,EAtBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,mCACE,sBAAKC,UAAWC,IAAEC,QAAlB,UACE,oBAAGF,UAAWC,IAAEE,KAAhB,mBAA6BR,EAA7B,mBACA,oBAAGK,UAAWC,IAAEE,KAAhB,sBAAgCP,EAAhC,mBACA,oBAAGI,UAAWC,IAAEE,KAAhB,kBAA4BN,EAA5B,aACA,oBAAGG,UAAWC,IAAEE,KAAhB,oBAA8BL,EAA9B,mBACA,oBAAGE,UAAWC,IAAEE,KAAhB,gCAA0CJ,EAA1C,oB,iCCkBOK,EAzBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,mCACE,8BACGD,EAAQE,KAAI,SAAAC,GAAM,OACjB,wBACER,UAAWC,IAAEQ,OAEbC,KAAK,SACLC,KAAMH,EACNI,QAASN,EALX,SAOGE,GALIK,IAAQC,oBCGVC,EAZM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OACE,mCACE,4BAAIA,OC4DKC,E,4MA1DbC,MAAQ,CACNvB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPsB,mBAAqB,WAAO,IAAD,EACM,EAAKD,MAEpC,OAHyB,EACjBvB,KADiB,EACXC,QADW,EACFC,K,EAKzBuB,gCAAkC,WAAO,IAGjCC,EAAqB,IAFV,EAAKH,MAAdvB,KACO,EAAKwB,qBAEpB,OAAOG,KAAKC,MAAMF,I,EAGpBf,gBAAkB,SAAAkB,GAChB,IAAMb,EAAOa,EAAEC,OAAOd,KACtB,EAAKe,UAAS,SAAAC,GAAI,sBACfhB,EAAOgB,EAAKhB,GAAQ,O,4CAIzB,WAAU,IAAD,EACwBiB,KAAKV,MAA5BvB,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACjBC,EAAQ8B,KAAKT,qBACbpB,EAAqB6B,KAAKR,kCAC1BS,EAASC,OAAOC,KAAKH,KAAKV,OAEhC,OACE,qCACE,cAAC,EAAD,CAAS1B,MAAM,wBAAf,SACE,cAAC,EAAD,CACEa,QAASwB,EACTvB,gBAAiBsB,KAAKtB,oBAGf,IAAVR,EACC,cAAC,EAAD,CAAckB,QAAQ,sBAEtB,cAAC,EAAD,CAASxB,MAAM,aAAf,SACE,cAAC,EAAD,CACEG,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,a,GAlDXiC,a,MCKRC,MARf,WACE,OACE,qBAAKjC,UAAU,MAAf,SACE,cAAC,EAAD,O,MCANkC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.7b59c28a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Statistics_wrapper__2w_Y7\",\"text\":\"Statistics_text__11dKU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__3Yw3u\"};","import PropTypes from 'prop-types';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <>\r\n      <h1>{title}</h1>\r\n      {children}\r\n    </>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import PropTypes from 'prop-types';\r\nimport s from './Statistics.module.css';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <>\r\n      <div className={s.wrapper}>\r\n        <p className={s.text}>Good: {good} üôÇ</p>\r\n        <p className={s.text}>Neutral: {neutral} üòê</p>\r\n        <p className={s.text}>Bad: {bad} ‚òπ</p>\r\n        <p className={s.text}>Total: {total} üìà</p>\r\n        <p className={s.text}>Positive feedback: {positivePercentage}% ‚≠ê</p>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import PropTypes from 'prop-types';\r\nimport shortid from 'shortid';\r\nimport s from './FeedbackOptions.module.css';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return (\r\n    <>\r\n      <div>\r\n        {options.map(option => (\r\n          <button\r\n            className={s.button}\r\n            key={shortid.generate()}\r\n            type=\"button\"\r\n            name={option}\r\n            onClick={onLeaveFeedback}\r\n          >\r\n            {option}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.array.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => {\r\n  return (\r\n    <>\r\n      <p>{message}</p>\r\n    </>\r\n  );\r\n};\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import React, { Component } from 'react';\r\nimport Section from '../Section';\r\nimport Statistics from '../Statistics';\r\nimport FeedbackOptions from '../FeedbackOptions';\r\nimport Notification from '../Notification';\r\n\r\nclass Feedback extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  countTotalFeedback = () => {\r\n    const { good, neutral, bad } = this.state;\r\n    const result = good + neutral + bad;\r\n    return result;\r\n  };\r\n\r\n  countPositiveFeedbackPercentage = () => {\r\n    const { good } = this.state;\r\n    const result = this.countTotalFeedback();\r\n    const percentage = (good * 100) / result;\r\n    return Math.round(percentage);\r\n  };\r\n\r\n  onLeaveFeedback = e => {\r\n    const name = e.target.name;\r\n    this.setState(prev => ({\r\n      [name]: prev[name] + 1,\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const { good, neutral, bad } = this.state;\r\n    const total = this.countTotalFeedback();\r\n    const positivePercentage = this.countPositiveFeedbackPercentage();\r\n    const objKey = Object.keys(this.state);\r\n\r\n    return (\r\n      <>\r\n        <Section title=\"Please leave feedback\">\r\n          <FeedbackOptions\r\n            options={objKey}\r\n            onLeaveFeedback={this.onLeaveFeedback}\r\n          />\r\n        </Section>\r\n        {total === 0 ? (\r\n          <Notification message=\"No feedback given\" />\r\n        ) : (\r\n          <Section title=\"Statistics\">\r\n            <Statistics\r\n              good={good}\r\n              neutral={neutral}\r\n              bad={bad}\r\n              total={total}\r\n              positivePercentage={positivePercentage}\r\n            />\r\n          </Section>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Feedback;\r\n","import Feedback from './components/Feedback';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Feedback />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}